name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm install
      
    - name: Build web app
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: jamb-mock-pro-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
  release:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm install
      
    - name: Build web app
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
    - name: Generate build number
      id: build_number
      run: echo "BUILD_NUMBER=$(date +%Y%m%d%H%M)" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ steps.build_number.outputs.BUILD_NUMBER }}
        release_name: JAMB Mock Pro v1.0.${{ steps.build_number.outputs.BUILD_NUMBER }}
        body: |
          ðŸ“± **JAMB Mock Pro Android APK**
          
          **Ready for Installation:**
          - Download the APK file below
          - Install on any Android device
          - Works offline for practice questions
          - Native app experience
          
          **Features:**
          âœ… Practice Mode with explanations
          âœ… Timed Mock Exams (2 hours)
          âœ… Performance Analytics
          âœ… Offline functionality
          âœ… All JAMB subjects included
          
          **Installation:**
          1. Download `jamb-mock-pro.apk`
          2. Enable "Install from unknown sources" on Android
          3. Tap the APK file to install
          4. Open JAMB Mock Pro from your app drawer
          
          Build: ${{ github.sha }}
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: jamb-mock-pro.apk
        asset_content_type: application/vnd.android.package-archive
